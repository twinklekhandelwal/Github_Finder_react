{"version":3,"sources":["url.js","repo.js","repo_url.js","finder.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","Repo","props","profile","repo","public_repo","console","log","map","Card","style","width","marginLeft","cursor","CardContent","alt","src","avatar_url","href","html_url","fontSize","textDecoration","Button","variant","marginTop","color","login","backgroundColor","padding","fontsize","public_repos","public_gists","followers","following","display","Typography","gutterBottom","target","rel","name","lineHeight","full_name","description","language","forks_count","watchers_count","stargazers_count","created_at","Finder","handleInputChange","e","setState","query","value","handleSubmit","a","async","preventDefault","Url","get","params","q","state","response","RepoUrl","resp","data","items","public","Paper","elevation","margin","onSubmit","this","bind","TextField","fullWidth","label","onChange","React","Component","Data","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffb5e718.chunk.js","sourcesContent":["import axios from 'axios';\nexport default axios.create({baseURL:\"https://api.github.com/search/\"})\n\n\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Card from '@material-ui/core/Card';\nimport './App.css';\nfunction Repo(props) {\n\t// render() {\n\t\tconst { profile, repo, public_repo  }=props;\n\t\tconsole.log(props)\n\t\t\n\t\t// const { info_repo } = this.props;\n\t\t// const { show_repo } = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* <div style={{display: 'inline-block'}}> */}\n\t\t\t\t{profile.map(profile => (\n\t\t\t\t\t<Card style={{ width: '260px', marginLeft: '200px', cursor: 'pointer' }}>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<img style={{ width: '200px' }} alt=\"thumbnail\" src={profile.avatar_url} />\n\t\t\t\t\t\t\t<a href={profile.html_url} style={{ fontSize: '27px', textDecoration: 'none' }}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '27', marginTop: '20px', width: '100%' }}>\n\t\t\t\t\t\t\t\t\tview\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<p style={{ fontSize: '27', color: '#666' }}>{profile.login}</p>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<span style={{ backgroundColor: '#5bc0de', padding: '3px 5px 3px 5px', fontsize: '0px' }}>\n\t\t\t\t\t\t\t\t{public_repo.public_repos}Public Repo\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span style={{ backgroundColor: '#0275d8', padding: '3px 5px 3px 5px' }}>\n\t\t\t\t\t\t\t\t{public_repo.public_gists}Public_Gists\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span style={{ backgroundColor: '#d9534f', padding: '3px 15px 5px 15px', fontsize: '0px' }}>\n\t\t\t\t\t\t\t\t{public_repo.followers}Followers\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span style={{ backgroundColor: '#373a3c', padding: '3px 15px 5px 15px' }}>\n\t\t\t\t\t\t\t\t{public_repo.following}Following\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t))}\n\n\t\t\t\t{/* <span>{show_repo.public_repos}</span> */}\n\t\t\t\t{/* </div> */}\n\t\t\t\t<div style={{ marginLeft: '450px', display: 'inline-block', marginTop: '-400px' }}>\n\t\t\t\t\t{repo.map(profile => (\n\t\t\t\t\t\t<Card style={{ width: '425px', display: 'inline-block', marginLeft: '50px' }}>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref={profile.html_url}\n\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '15px', textDecoration: 'none', display: 'table-cell' }}\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t{profile.name}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref={profile.html_url}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '13px',\n\t\t\t\t\t\t\t\t\t\t\t\tlineHeight: '0',\n\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'black',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t{profile.full_name}\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p style={{ fontSize: '13px' }}>{profile.description}</p>\n\t\t\t\t\t\t\t\t\t<p style={{ fontSize: '15px', display: 'inline-block' }}>{profile.language}</p>\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#0275d8',\n\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '100px',\n\t\t\t\t\t\t\t\t\t\t\tpadding: '3px 10px 3px 10px',\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t{profile.forks_count}Fork\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span style={{ backgroundColor: '#d9534f', padding: '3px 10px 3px 10px' }}>\n\t\t\t\t\t\t\t\t\t\t{profile.watchers_count}watchers\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span style={{ backgroundColor: '#4CAF50 ', padding: '3px 10px 3px 10px' }}>\n\t\t\t\t\t\t\t\t\t\t{profile.stargazers_count}star\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<p>{profile.created_at}</p>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\nexport default Repo;\n","import axios from 'axios';\nexport default axios.create({ baseURL: 'https://api.github.com/users/' });\n","import React from 'react';\nimport Url from './url';\nimport Repo from './repo';\nimport RepoUrl from './repo_url';\nimport { TextField, Paper } from '@material-ui/core';\nclass Finder extends React.Component {\n\t constructor(props) {\n\t \tsuper(props);\n\t\tthis.state = { query: '', profile: '', repo: '', public_repo : '' };\n\t}\n\thandleInputChange = e => {\n\t\tthis.setState({\n\t\t\tquery: e.target.value,\n\t\t});\n\t};\n\n\t\n\thandleSubmit = async e => {\n\t\te.preventDefault();\n\t\tconst response = await Url.get('users', {\n\t\t\tparams: {\n\t\t\t\tq: this.state.query,\n\t\t\t},\n\t\t});\n\t\tconst resp = await RepoUrl.get(`/${this.state.query}/repos`);\n\t\tconsole.log(response);\n\t\t// this.setState({ repos: response.data.items, rep: resp.data });\n\n\t\tconst public_repo = await RepoUrl.get(`/${this.state.query}`);\n\t\tconsole.log(public_repo.data);\n\t\tthis.setState({ profile: response.data.items, repo: resp.data, public: public_repo.data });\n\t};\n\t\n\t// componentDidMount(){\n\t// \tthis.handleSubmit.bind(this)();\n\t//   }\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Paper elevation={6} style={{ padding: '15px', margin: '15px', backgroundColor: 'white' }}>\n\t\t\t\t\t<form onSubmit={this.handleSubmit.bind(this)}>\n\t\t\t\t\t\t<TextField fullWidth label=\"search...\" onChange={this.handleInputChange}></TextField>\n\t\t\t\t\t</form>\n\t\t\t\t</Paper>\n\t\t\t\t{this.state.profile !== '' && (\n\t\t\t\t\t<Repo {...this.state} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Finder;\n","import React from 'react';\n// import logo from './logo.svg';\nimport Finder from './finder';\n// import Repo from './repo';\nimport './App.css';\nclass Data extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Finder />\n\t\t\t\t{/* <Repo/>  */}\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Data;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}